{"mappings":"AEAA,SAAS,gBAAgB,CAAC,mBAAoB,WAC1C,IAAI,EAAgB,SAAS,cAAc,CAAC,iBAC5C,CAAA,EAAc,KAAK,CAAC,OAAO,CAAG,EAC9B,EAAc,KAAK,CAAC,SAAS,CAAG,mBAChC,EAAc,OAAO,CACjB,CACI,CAAE,QAAS,EAAG,UAAW,mBAAoB,EAC7C,CAAE,QAAS,EAAG,UAAW,eAAgB,EAC5C,CACD,CACI,SAAU,IACV,OAAQ,WACR,KAAM,UACV,EAER,GCdA,MAAM,EAAa,SAAS,gBAAgB,CAAC,eAE7C,EAAW,OAAO,CAAC,AAAC,IAChB,IAAM,EAAO,EAAU,WAAW,CAAC,IAAI,GACjC,EAAQ,EAAK,KAAK,CAAC,IACzB,CAAA,EAAU,SAAS,CAAG,EACjB,GAAG,CAAC,AAAC,IACF,IAAM,EAAU,EAAK,KAAK,CAAC,IAC3B,MAAO,CAAC,kBAAkB,EAAE,EAAQ,GAAG,CAAC,AAAC,GAAW,CAAC,qBAAqB,EAAE,EAAO,OAAO,CAAC,EAAE,IAAI,CAAC,IAAI,MAAM,CAAC,AACjH,GACC,IAAI,CAAC,IACd,GAEA,MAAM,EAAU,SAAS,gBAAgB,CAAC,WAE1C,SAAS,IACL,EAAQ,OAAO,CAAC,CAAC,EAAQ,KACrB,IAAM,EAAO,EAAO,qBAAqB,GACnC,EAAe,OAAO,WAAW,CACvC,GAAI,EAAK,MAAM,EAAI,GAAK,EAAK,GAAG,EAAI,EAAc,CAC9C,IAAM,EAAW,AAAA,CAAA,EAAK,GAAG,CAAG,EAAK,MAAM,AAAN,EAAU,CAE3C,CAAA,EAAO,KAAK,CAAC,OAAO,CADJ,EAAI,KAAK,GAAG,CAAC,EAAU,EAAe,GAAM,CAAA,EAAe,CAAA,CAE/E,MACI,EAAO,KAAK,CAAC,OAAO,CAAG,CAE/B,EACJ,CAEA,OAAO,gBAAgB,CAAC,SAAU,GAElC,IChCA,MAAM,EAAmB,SAAS,aAAa,CAAC,0BAW1C,EAAW,IAAI,qBATE,CAAC,EAAS,KAC7B,EAAQ,OAAO,CAAC,AAAC,IACT,EAAM,cAAc,GACpB,EAAM,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,kBAC3B,EAAS,SAAS,CAAC,EAAM,MAAM,EAEvC,EACJ,EAE0D,CACtD,KAAM,KACN,WAAY,MACZ,UAAW,EACf,GACA,EAAS,OAAO,CAAC,E,4D","sources":["<anon>","src/scripts/app.js","src/scripts/home.js","src/scripts/about.js","src/scripts/language.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function() {\n    let animatedTitle = document.getElementById(\"animated_title\");\n    animatedTitle.style.opacity = 0;\n    animatedTitle.style.transform = \"translateY(50px)\";\n    animatedTitle.animate([\n        {\n            opacity: 0,\n            transform: \"translateY(300px)\"\n        },\n        {\n            opacity: 1,\n            transform: \"translateY(0)\"\n        }\n    ], {\n        duration: 2000,\n        easing: \"ease-out\",\n        fill: \"forwards\"\n    });\n});\n\n\nconst $3f364280959c03ef$var$paragraphs = document.querySelectorAll(\".about_text\");\n$3f364280959c03ef$var$paragraphs.forEach((paragraph)=>{\n    const text = paragraph.textContent.trim();\n    const words = text.split(\" \");\n    paragraph.innerHTML = words.map((word)=>{\n        const letters = word.split(\"\");\n        return `<div class=\"word\">${letters.map((letter)=>`<span class=\"letter\">${letter}</span>`).join(\"\")}</div>`;\n    }).join(\" \");\n});\nconst $3f364280959c03ef$var$letters = document.querySelectorAll(\".letter\");\nfunction $3f364280959c03ef$var$handleScroll() {\n    $3f364280959c03ef$var$letters.forEach((letter, index)=>{\n        const rect = letter.getBoundingClientRect();\n        const windowHeight = window.innerHeight;\n        if (rect.bottom >= 0 && rect.top <= windowHeight) {\n            const centerY = (rect.top + rect.bottom) / 3;\n            const opacity = 1 - Math.abs(centerY - windowHeight / 4) / (windowHeight / 3);\n            letter.style.opacity = opacity;\n        } else letter.style.opacity = 0;\n    });\n}\nwindow.addEventListener(\"scroll\", $3f364280959c03ef$var$handleScroll);\n$3f364280959c03ef$var$handleScroll();\n\n\nconst $ef2d0223374c7da0$var$elementToObserve = document.querySelector(\".contenu_language_body\");\nconst $ef2d0223374c7da0$var$revealCallback = (entries, observer)=>{\n    entries.forEach((entry)=>{\n        if (entry.isIntersecting) {\n            entry.target.classList.add(\"reveal-visible\");\n            observer.unobserve(entry.target);\n        }\n    });\n};\nconst $ef2d0223374c7da0$var$observer = new IntersectionObserver($ef2d0223374c7da0$var$revealCallback, {\n    root: null,\n    rootMargin: \"0px\",\n    threshold: 0.5\n});\n$ef2d0223374c7da0$var$observer.observe($ef2d0223374c7da0$var$elementToObserve);\n\n\n\n\n//# sourceMappingURL=index.5a3ebbfc.js.map\n","import about from \"./home\";\nimport about from \"./about\";\nimport about from \"./language\";\n\n\n\n","document.addEventListener('DOMContentLoaded', function() {\n    let animatedTitle = document.getElementById('animated_title');\n    animatedTitle.style.opacity = 0;\n    animatedTitle.style.transform = 'translateY(50px)';\n    animatedTitle.animate(\n        [\n            { opacity: 0, transform: 'translateY(300px)' },\n            { opacity: 1, transform: 'translateY(0)' }\n        ],\n        {\n            duration: 2000,\n            easing: 'ease-out',\n            fill: 'forwards'\n        }\n    );\n});","\nconst paragraphs = document.querySelectorAll(\".about_text\");\n\nparagraphs.forEach((paragraph) => {\n    const text = paragraph.textContent.trim();\n    const words = text.split(\" \");\n    paragraph.innerHTML = words\n        .map((word) => {\n            const letters = word.split(\"\");\n            return `<div class=\"word\">${letters.map((letter) => `<span class=\"letter\">${letter}</span>`).join(\"\")}</div>`;\n        })\n        .join(\" \");\n});\n\nconst letters = document.querySelectorAll(\".letter\");\n\nfunction handleScroll() {\n    letters.forEach((letter, index) => {\n        const rect = letter.getBoundingClientRect();\n        const windowHeight = window.innerHeight;\n        if (rect.bottom >= 0 && rect.top <= windowHeight) {\n            const centerY = (rect.top + rect.bottom) / 3;\n            const opacity = 1 - Math.abs(centerY - windowHeight / 4) / (windowHeight / 3);\n            letter.style.opacity = opacity;\n        } else {\n            letter.style.opacity = 0;\n        }\n    });\n}\n\nwindow.addEventListener(\"scroll\", handleScroll);\n\nhandleScroll();\n\n\n\n\n","const elementToObserve = document.querySelector('.contenu_language_body');\n\nconst revealCallback = (entries, observer) => {\n    entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n            entry.target.classList.add('reveal-visible');\n            observer.unobserve(entry.target);\n        }\n    });\n};\n\nconst observer = new IntersectionObserver(revealCallback, {\n    root: null,\n    rootMargin: '0px',\n    threshold: 0.5,\n});\nobserver.observe(elementToObserve);\n"],"names":["document","addEventListener","animatedTitle","getElementById","style","opacity","transform","animate","duration","easing","fill","$3f364280959c03ef$var$paragraphs","querySelectorAll","forEach","paragraph","text","textContent","trim","words","split","innerHTML","map","word","letters","letter","join","$3f364280959c03ef$var$letters","$3f364280959c03ef$var$handleScroll","index","rect","getBoundingClientRect","windowHeight","window","innerHeight","bottom","top","centerY","Math","abs","$ef2d0223374c7da0$var$elementToObserve","querySelector","$ef2d0223374c7da0$var$observer","IntersectionObserver","entries","observer","entry","isIntersecting","target","classList","add","unobserve","root","rootMargin","threshold","observe"],"version":3,"file":"index.5a3ebbfc.js.map"}